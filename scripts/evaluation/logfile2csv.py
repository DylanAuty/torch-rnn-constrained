# logfile2csv.py
# Python2 script to parse the log files generated by network training, converting them into a csv.
#
# INPUT LOOKS LIKE THIS:
#		Running with CUDA on GPU 0  
#		Network Architecture: Skip connections, unconstrained 
#		Epoch 1.00 / 50, i = 1 / 1477050, loss = 4.153574 
#		Epoch 1.00 / 50, i = 2 / 1477050, loss = 3.785912 
#		Epoch 1.00 / 50, i = 3 / 1477050, loss = 3.355086 
#		Epoch 1.00 / 50, i = 4 / 1477050, loss = 3.176079 
#		Epoch 1.03 / 50, i = 999 / 1477050, loss = 0.088130
#		Epoch 1.03 / 50, i = 1000 / 1477050, loss = 0.103744
#		val_loss =  0.10198346368226
#		Epoch 1.03 / 50, i = 1001 / 1477050, loss = 0.416709
#		Epoch 1.03 / 50, i = 1002 / 1477050, loss = 0.111728
#		Epoch 1.03 / 50, i = 1003 / 1477050, loss = 0.100825
#
# Every time a checkpoint is saved, a line beginning "val_loss" is printed.
# This evaluates the loss using the validation set provided in the input split.
# Script should produce 2 .csv files:
# trainProgress.csv:
# 	3 Columns: EPOCH, ITERATION, LOSS
# checkpointLoss.csv:
#		3 Columns: EPOCH, ITERATION, VALIDATION_LOSS
#
# Script expects 2 arguments:
#	1) -i /path/to/logfile.txt
#	2) -o /path/to/outputrootdir/)
# Dylan Auty, 16/05/2016

import sys
import getopt

def usage():
    sys.exit("Usage: python2 logfile2csv.py [-i /full/path/to/logfile.txt] [-o /full/path/to/outputdir]")
    return

def main(argv):
    inputfile = ''
    outputFile1 = ''
    outputFile2 = ''
    try:
        opts, args = getopt.getopt(argv,":hi:o:")
    except:
        usage()
        sys.exit(2)     # Should not get here, should be done in usage()
    for opt, arg in opts:
        if opt == '-h':
            usage()
        elif opt == '-i':
            inputFile = arg
        elif opt == '-o':
            outputFile1 = str(arg) + "trainProgress.csv"
            outputFile2 = str(arg) + "checkpointLoss.csv"
    
    with open(inputFile) as f:
        with open(outputFile1, "a+") as o1:
            with open(outputFile2, "a+") as o2:
                prev_line = ''
                for line in f:
                    brokenLine = line.split(" ")
                    if brokenLine[0] == "Epoch":
                        csvString = brokenLine[1] + "," + brokenLine[6] + "," + brokenLine[11].split("\t")[0] + "\n"
                        o1.write(csvString)
                    elif brokenLine[0] == "val_loss":
                        val_loss = brokenLine[2].split("\t")[1]
                        brokenLine = prev_line.split(" ")
                        csvString = brokenLine[1] + "," + brokenLine[6] + "," + val_loss + "\n"
                        o2.write(csvString)

                    prev_line = line


if __name__ == "__main__":
    main(sys.argv[1:])

